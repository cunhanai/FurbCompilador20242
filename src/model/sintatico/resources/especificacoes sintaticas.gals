#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = Stream
Parser = SLR
#RegularDefinitions
min: [a-z]
mai: [A-Z]
letra: {min} | {mai}
dig: [0-9]
prefixo: (i|f|b|s)_
umnove: [1-9]
#Tokens
// equipe: Ana Júlia da Cunha, Gabriel Ribas Cestari, Thomas Augusto Haskel

reserva: {min} {letra}*

main = reserva: "main"
end = reserva: "end"
if = reserva: "if"
elif = reserva: "elif"
else = reserva: "else"
false = reserva: "false"
true = reserva: "true"
read = reserva: "read"
write = reserva: "write"
writeln = reserva: "writeln"
repeat = reserva: "repeat"
until = reserva: "until"
while = reserva: "while"

identificador:! {prefixo} ({letra} | {min} {mai}) (({min} | {dig}) {mai}?)*
conint: ("0" | {umnove} {dig}*)
confloat: ("0" | {umnove} {dig}*) "," ({dig}* {umnove} | "0")
constring:  \" ([^\n\"%] | % x)* \"

//bloco
:! ">@" \n [^@]* \n "@<"

//símbolo especial
"&&"
"||"
"!"
"=="
"!="
"<"
">"
"+" 
"-"
"*"
"/"
","
";"
"="
"("
")"

//caracter de formatação
:[\s\t\n]



#NonTerminals
<main>

<lista_instrucoes>
<instrucao>
<dec_var>
<lista_ids>
<comando>

<atribuicao>
<expressao>

<entrada>
<lista_entradas>
<opc_constring>

<saida>
<escolha_write>
<lista_expressoes>

<selecao>
<if>
<opc_elif>
<opc_else>
<lista_comandos>

<repeticao> 
<escolha_repeticao>


#Grammar
<main> ::= main <lista_instrucoes> end ;
<lista_instrucoes> ::= <instrucao>";" | <instrucao>";" <lista_instrucoes> ;
<instrucao> ::= <dec_var> | <comando> ;
<dec_var> ::= <lista_ids> ;
<lista_ids> ::= identificador | identificador","<lista_ids> ;
<comando> ::= <atribuicao> | <entrada> | <saida> | <selecao> | <repeticao> ;

<atribuicao> ::= <lista_ids> "=" <expressao> ;

<entrada> ::= read "(" <lista_entradas> ")" ;
<lista_entradas> ::= <opc_constring> identificador | <opc_constring> identificador "," <lista_entradas> ;
<opc_constring> ::= constring | î ;

<saida> ::= <escolha_write> "(" <lista_expressoes> ")" ;
<escolha_write> ::= write | writeln ;
<lista_expressoes> ::= <expressao> | <expressao> "," <lista_expressoes> ;

<selecao> ::= <if> <opc_elif> <opc_else> end ;
<if> ::= if <expressao> <lista_comandos> ;
<opc_elif> ::= elif <expressao> <lista_comandos> <opc_elif> | î ;
<opc_else> ::= else <lista_comandos> | î ;
<lista_comandos> ::= <comando> | <comando> <lista_comandos> ;

<repeticao> ::= repeat <lista_comandos> <escolha_repeticao> <expressao> ;
<escolha_repeticao> ::= while | until ;
